digraph {
	subgraph cluster_mod2 {
		label="mod2(a: int)";
		rankdir="TB";
		mod2_0 [label="START", shape="rectangle", style="rounded"];
		mod2_2 [label="[a]\n----------\ntwo := 2\ntmp := a / two\ntmp2 := tmp * two\ntmp3 := a - tmp2\none := 1\nans := one == tmp3\nreturn ans\n----------\n[]", shape="rectangle", style="rounded"];

		mod2_0 -> mod2_2;
	}
	subgraph cluster_loop_subroutine {
		label="loop_subroutine(a: int, b: int, c: bool)";
		rankdir="TB";
		loop_subroutine_0 [label="START", shape="rectangle", style="rounded"];
		loop_subroutine_2 [label="[a, b, c]\n----------\ni := 0\nn := 63\none := 1\ntwo := 2\nans := 0\nto_add := 1\n----------\n[a, ans, b, c, i, n, one, to_add, two]", shape="rectangle", style="rounded"];
		loop_subroutine_3 [label="[a, ans, b, c, i, n, one, to_add, two]\n----------\ncond := i <= n\nif cond\n----------\n[a, ans, b, c, i, n, one, to_add, two]", shape="rectangle", style="rounded"];
		loop_subroutine_4 [label="[a, ans, b, c, i, n, one, to_add, two]\n----------\nmod2a := mod2(a)\nmod2b := mod2(b)\ncond_add := mod2a && mod2b\nif c\n----------\n[a, ans, b, c, cond_add, i, mod2a, mod2b, n, one, to_add, two]", shape="rectangle", style="rounded"];
		loop_subroutine_5 [label="[a, ans, b, c, i, mod2a, mod2b, n, one, to_add, two]\n----------\ncond_add := mod2a || mod2b\n----------\n[a, ans, b, c, cond_add, i, n, one, to_add, two]", shape="rectangle", style="rounded"];
		loop_subroutine_6 [label="[a, ans, b, c, cond_add, i, n, one, to_add, two]\n----------\nif cond_add\n----------\n[a, ans, b, c, i, n, one, to_add, two]", shape="rectangle", style="rounded"];
		loop_subroutine_7 [label="[a, ans, b, c, i, n, one, to_add, two]\n----------\nans := ans + to_add\n----------\n[a, ans, b, c, i, n, one, to_add, two]", shape="rectangle", style="rounded"];
		loop_subroutine_8 [label="[a, ans, b, c, i, n, one, to_add, two]\n----------\na := a / two\nb := b / two\nto_add := to_add * two\ni := i + one\n----------\n[a, ans, b, c, i, n, one, to_add, two]", shape="rectangle", style="rounded"];
		loop_subroutine_9 [label="[ans]\n----------\nreturn ans\n----------\n[]", shape="rectangle", style="rounded"];

		loop_subroutine_0 -> loop_subroutine_2;
		loop_subroutine_2 -> loop_subroutine_3;
		loop_subroutine_3 -> loop_subroutine_4 [label="T"];
		loop_subroutine_3 -> loop_subroutine_9 [label="F"];
		loop_subroutine_4 -> loop_subroutine_5 [label="T"];
		loop_subroutine_4 -> loop_subroutine_6 [label="F"];
		loop_subroutine_5 -> loop_subroutine_6;
		loop_subroutine_6 -> loop_subroutine_7 [label="T"];
		loop_subroutine_6 -> loop_subroutine_8 [label="F"];
		loop_subroutine_7 -> loop_subroutine_8;
		loop_subroutine_8 -> loop_subroutine_3;
	}
	subgraph cluster_OR {
		label="OR(a: int, b: int)";
		rankdir="TB";
		OR_0 [label="START", shape="rectangle", style="rounded"];
		OR_2 [label="[a, b]\n----------\noper := true\nv1 := loop_subroutine(a, b, oper)\nreturn v1\n----------\n[]", shape="rectangle", style="rounded"];

		OR_0 -> OR_2;
	}
	subgraph cluster_AND {
		label="AND(a: int, b: int)";
		rankdir="TB";
		AND_0 [label="START", shape="rectangle", style="rounded"];
		AND_2 [label="[a, b]\n----------\noper := false\nv1 := loop_subroutine(a, b, oper)\nreturn v1\n----------\n[]", shape="rectangle", style="rounded"];

		AND_0 -> AND_2;
	}
	subgraph cluster_XOR {
		label="XOR(a: int, b: int)";
		rankdir="TB";
		XOR_0 [label="START", shape="rectangle", style="rounded"];
		XOR_2 [label="[a, b]\n----------\nand_val := AND(a, b)\nor_val := OR(a, b)\nans := or_val - and_val\nreturn ans\n----------\n[]", shape="rectangle", style="rounded"];

		XOR_0 -> XOR_2;
	}
	subgraph cluster_main {
		label="main(a: int, b: int, c: int)";
		rankdir="TB";
		main_0 [label="START", shape="rectangle", style="rounded"];
		main_2 [label="[a, b, c]\n----------\none := 1\nzero := 0\nsel := c - one\nans := zero\nless := sel < zero\nequal := sel == zero\ngreater := sel > zero\nif less\n----------\n[a, b, equal]", shape="rectangle", style="rounded"];
		main_3 [label="[a, b, equal]\n----------\nif equal\n----------\n[a, b]", shape="rectangle", style="rounded"];
		main_4 [label="[a, b]\n----------\nans := AND(a, b)\n----------\n[ans]", shape="rectangle", style="rounded"];
		main_5 [label="[a, b]\n----------\nans := OR(a, b)\n----------\n[ans]", shape="rectangle", style="rounded"];
		main_6 [label="[a, b]\n----------\nans := XOR(a, b)\n----------\n[ans]", shape="rectangle", style="rounded"];
		main_7 [label="[ans]\n----------\nprint ans\n----------\n[]", shape="rectangle", style="rounded"];

		main_0 -> main_2;
		main_2 -> main_4 [label="T"];
		main_2 -> main_3 [label="F"];
		main_3 -> main_5 [label="T"];
		main_3 -> main_6 [label="F"];
		main_4 -> main_7;
		main_5 -> main_7;
		main_6 -> main_7;
	}
}
