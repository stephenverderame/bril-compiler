[envs.baseline]
command = "bril2json < {filename} | brili {args}"
return_code = 0

[envs.dummy]
command = "bril2json < {filename} | cargo run --bin dummy-pass | brili {args}"
return_code = 0

[envs.dummy-single]
command = "bril2json < {filename} | cargo run --bin dummy-pass -- --use-blocks false | brili {args}"

[envs.local-dce]
command = "bril2json < {filename} | cargo run --bin local-dce | brili {args}"
return_code = 0

[envs.lvn]
command = "bril2json < {filename} | cargo run --bin lvn | brili {args}"
return_code = 0

[envs.dce]
command = "bril2json < {filename} | cargo run --bin dce | brili {args}"
return_code = 0

[envs.licm]
command = "bril2json < {filename} | cargo run --bin licm | brili {args}"
return_code = 0

[envs.domtree]
command = "bril2json < {filename} | cargo run --bin bril2cfg -- --dom > /dev/null"
return_code = 0
# Converting to a domtree is non-deterministic, so we just check that it
# doesn't panic (which will happen if the dom tree is incorrect due to testing)
output.domtree = "-"

[envs.ssa]
command = "bril2json < {filename} | cargo run --bin ssa | brili {args}"
return_code = 0

[envs.ssa-roundtrip]
command = """\
            bril2json < {filename} | cargo run --bin ssa | \
            cargo run --bin is-ssa | cargo run --bin ssa -- --out | \
            cargo run --bin is-ssa -- --not | brili {args}"""

# Note: These don't work with the brilirs interpreter
# This is bc, the brilirs interpreter assumes the assembly is generated
# from a well-formed high-level program. For example, while legal for a variable
# to be used which is not defined along a path that is never taken, the interpreter
# doesn't like that.
[envs.gc]
command = """\
            case {filename} in
            *"ssa1.bril") bril2json < {filename} | brili {args} ;;
            *"quadratic.bril") bril2json < {filename} | brili {args} ;;
            * ) bril2json < {filename} | cargo run --bin brilirs {args} ;;
            esac
            """
